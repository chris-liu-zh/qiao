/*
 * @Author: Chris
 * @Date: 2025-03-07 12:03:36
 * @LastEditors: Chris
 * @LastEditTime: 2025-03-14 15:25:36
 * @Description: 请填写简介
 */
package ignore

import (
	"fmt"
	"testing"
	"time"
)

func Test_CacheSet(t *testing.T) {
	c, err := New()
	if err != nil {
		t.Error(err)
		return
	}
	c.OnEvicted(func(key string, value any) {
		fmt.Printf("Item %s with value %v has been evicted from the cache.\n", key, value)
	})
	c.Set("test1", 1)

	time.Sleep(5 * time.Second)
	c.DeleteExpired()
}

func Test_IandD(t *testing.T) {
	c, err := New()
	if err != nil {
		t.Error(err)
		return
	}
	c.Set("test", 1)

	aa, err := Increment(c, "test", 1.1)
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Printf("v:%v t: %T\n", aa, aa)
	aa, err = Decrement(c, "test", 1.1)
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Printf("v:%v t: %T\n", aa, aa)
}

func Test_cacheFromfile(t *testing.T) {

	c, err := New(WithSave("./cache", 1, 0))
	if err != nil {
		t.Error(err)
		return
	}
	for i := range 1000 {
		c.Set(fmt.Sprintf("test%d", i), i)
	}

	time.Sleep(5 * time.Second)
}

func Test_ViewCache(t *testing.T) {
	PrintCache("cache")
}
